---
steps:
  - id: 'install-dependencies'
    name: 'node:16-alpine'
    entrypoint: "sh"
    args:
      - -c
      - |
        apk --no-cache add git \
        && npm i pnpm@6.32 -g
        pnpm install --frozen-lockfile
    waitFor: [ '-' ]

  - id: 'build'
    name: 'node:16-alpine'
    entrypoint: 'sh'
    args:
      - -c
      - |
        npm i pnpm@6.32 -g
        pnpm build-storybook
    waitFor: [ 'install-dependencies' ]

  - id: 'archive-build'
    name: 'alpine'
    args: [ 'tar', '-cjf', '$BUILD_ID.tar.bz2', './storybook-static' ]
    waitFor: [ 'build' ]

  - id: 'save-archived-build'
    name: 'gcr.io/cloud-builders/gsutil'
    args: [ 'cp', './$BUILD_ID.tar.bz2', 'gs://${_BUCKET_NAME}-artifacts${_BUCKET_PATH}/$BUILD_ID.tar.bz2' ]
    waitFor: [ 'archive-build' ]

  - id: 'deploy'
    name: 'gcr.io/cloud-builders/gsutil'
    args: [ '-m', 'rsync', '-r', '-c', '-d', './storybook-static', 'gs://${_BUCKET_NAME}${_BUCKET_PATH}' ]
    waitFor: [ 'build' ]

  - id: 'set-cache-control-for-html'
    name: 'gcr.io/cloud-builders/gsutil'
    args: [ '-m', 'setmeta', '-h', 'Cache-Control:private, max-age=0, no-cache', 'gs://${_BUCKET_NAME}${_BUCKET_PATH}/**/*.html' ]
    waitFor: [ 'deploy' ]

  - id: 'set-cache-control-for-assets'
    name: 'gcr.io/cloud-builders/gsutil'
    entrypoint: 'bash'
    args: [ '-c', 'gsutil -m setmeta -h "Cache-Control:public, max-age=604800" "gs://${_BUCKET_NAME}${_BUCKET_PATH}/**/*.{js,css,png,jpeg,jpg,gif,ico}" || true' ]
    waitFor: [ 'set-cache-control-for-html' ]

  - id: 'mark-deployed-artifacts'
    name: 'gcr.io/cloud-builders/gsutil'
    args: [ 'cp', './$BUILD_ID.tar.bz2', 'gs://${_BUCKET_NAME}-artifacts${_BUCKET_PATH}/currently-deployed.tar.bz2' ]
    waitFor: [ 'deploy', 'archive-build' ]

tags:
  - 'bucket-deploy'
  - 'symptom-checker'
  - 'symptom-checker-storybook'
  - 'symptom-checker-storybook_${_INSTANCE}'
